<#
.SYNOPSIS
  –Ü–Ω—Ç–µ–≥—Ä—É—î –ø–∞–∫–µ—Ç DAO-G35_v1.0.zip —É CHECHA_CORE: —Ä–æ–∑–ø–∞–∫–æ–≤—É—î, –æ–Ω–æ–≤–ª—é—î INDEX, –ª–æ–≥ —Ç–∞ CHECKSUM.

.DESCRIPTION
  –°–∫—Ä–∏–ø—Ç –≤–∏–∫–æ–Ω—É—î –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ:
    1) –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —à–ª—è—Ö—ñ–≤ —Ç–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π.
    2) –†–æ–∑–ø–∞–∫–æ–≤–∫–∞ G35 —É C12\Vault\DAO\G35 (–∑ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–æ–º).
    3) –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ C12\INDEX.md (—è–∫—â–æ –≤—ñ–¥—Å—É—Ç–Ω—î).
    4) –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ—ó –¥–æ C03\LOG\LOG.md (—ñ–∑ –º—ñ—Ç–∫–æ—é —á–∞—Å—É).
    5) –û–±—á–∏—Å–ª–µ–Ω–Ω—è SHA256 zip-—Ñ–∞–π–ª–∞ —Ç–∞ –¥–æ–ø–∏—Å —É C05\ARCHIVE\CHECKSUMS.txt.

.PARAMETER Root
  –ö–æ—Ä—ñ–Ω—å CHECHA_CORE (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: D:\CHECHA_CORE).

.PARAMETER ZipPath
  –ü–æ–≤–Ω–∏–π —à–ª—è—Ö –¥–æ ZIP (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: <Root>\C12\Vault\DAO\DAO-G35_v1.0.zip).

.EXAMPLE
  PS> .\Integrate-DAO-G35.ps1
  # –Ü–Ω—Ç–µ–≥—Ä—É—î –∑–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–º–∏ —à–ª—è—Ö–∞–º–∏ (D:\CHECHA_CORE\...)

.EXAMPLE
  PS> .\Integrate-DAO-G35.ps1 -Root "C:\CHECHA_CORE"
  # –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –∫–æ—Ä–µ–Ω—è

.NOTES
  –ü–æ—Ç—Ä–µ–±—É—î PowerShell 7+ (pwsh), –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å —É –∫–∞—Ç–∞–ª–æ–≥–∏ CHECHA_CORE.
#>

[CmdletBinding(SupportsShouldProcess)]
param(
    [Parameter()][string]$Root = "D:\CHECHA_CORE",
    [Parameter()][string]$ZipPath
)

Set-StrictMode -Version Latest
$ErrorActionPreference = "Stop"

function New-DirIfMissing([string]$Path) {
    if (-not (Test-Path -LiteralPath $Path)) {
        New-Item -ItemType Directory -Path $Path | Out-Null
    }
}

function Add-LineOnce {
    param(
        [Parameter(Mandatory)][string]$File,
        [Parameter(Mandatory)][string]$Line
    )
    if (-not (Test-Path -LiteralPath $File)) {
        New-Item -ItemType File -Path $File -Force | Out-Null
        # UTF-8 BOM –¥–ª—è GitBook/Markdown —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
        Set-Content -LiteralPath $File -Value "" -Encoding UTF8
    }
    $content = Get-Content -LiteralPath $File -ErrorAction Stop
    if ($content -notcontains $Line) {
        Add-Content -LiteralPath $File -Value $Line
    }
}

function Write-CoreLog {
    param(
        [Parameter(Mandatory)][string]$Root,
        [Parameter(Mandatory)][string]$Message
    )
    $logDir = Join-Path $Root "C03\LOG"
    $log = Join-Path $logDir "LOG.md"
    New-DirIfMissing $logDir
    $stamp = (Get-Date).ToString("yyyy-MM-dd HH:mm:ss")
    Add-LineOnce -File $log -Line "# CORE LOG"  # –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ª–∏—à–µ —è–∫—â–æ —Ñ–∞–π–ª –ø–æ—Ä–æ–∂–Ω—ñ–π
    Add-Content -LiteralPath $log -Value "$stamp [INFO] $Message"
}

# --- –®–ª—è—Ö–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
if (-not $ZipPath) {
    $ZipPath = Join-Path $Root "C12\Vault\DAO\DAO-G35_v1.0.zip"
}
$destDir = Join-Path $Root "C12\Vault\DAO\G35"
$indexFile = Join-Path $Root "C12\INDEX.md"
$archDir = Join-Path $Root "C05\ARCHIVE"
$checks = Join-Path $archDir "CHECKSUMS.txt"

Write-Host "üîß Integrate-DAO-G35 | Root = $Root"
Write-Host "üì¶ ZIP            | $ZipPath"
Write-Host "üìÅ Dest           | $destDir"

# 1) –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
if (-not (Test-Path -LiteralPath $ZipPath)) {
    throw "ZIP –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: $ZipPath"
}
New-DirIfMissing (Split-Path -Parent $destDir)
New-DirIfMissing $archDir

# 2) –†–æ–∑–ø–∞–∫–æ–≤–∫–∞
if ($PSCmdlet.ShouldProcess($destDir, "Expand-Archive (force overwrite)")) {
    if (Test-Path -LiteralPath $destDir) {
        Remove-Item -LiteralPath $destDir -Recurse -Force
    }
    Expand-Archive -Path $ZipPath -DestinationPath $destDir -Force
    Write-Host "‚úÖ –†–æ–∑–ø–∞–∫–æ–≤–∞–Ω–æ –¥–æ: $destDir"
}

# 3) –û–Ω–æ–≤–ª–µ–Ω–Ω—è INDEX (–ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ README G35)
$indexLine = "- [G35 ‚Äî DAO-–ú–µ–¥—ñ–∞](./DAO/G35/README.md) ‚Äî —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–µ —Å–µ—Ä—Ü–µ —Å–∏—Å—Ç–µ–º–∏: –∫–∞–º–ø–∞–Ω—ñ—ó, –¥–∞–π–¥–∂–µ—Å—Ç–∏, –º–µ–¥—ñ–∞-—Ñ—ñ–¥–±–µ–∫."
Add-LineOnce -File $indexFile -Line $indexLine
Write-Host "üß≠ INDEX –æ–Ω–æ–≤–ª–µ–Ω–æ: $indexFile"

# 4) –õ–æ–≥—É–≤–∞–Ω–Ω—è
Write-CoreLog -Root $Root -Message "–Ü–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–æ DAO-G35 Package v1.0 ‚Üí C12\Vault\DAO\G35"
Write-Host "üìù –ó–∞–ø–∏—Å —É –ª–æ–≥ –¥–æ–¥–∞–Ω–æ: C03\LOG\LOG.md"

# 5) SHA256 ‚Üí CHECKSUMS.txt
$hash = Get-FileHash -LiteralPath $ZipPath -Algorithm SHA256
$line = ("{0}  {1}" -f $hash.Hash, (Split-Path -Leaf $ZipPath))

if (-not (Test-Path -LiteralPath $checks)) {
    New-Item -ItemType File -Path $checks -Force | Out-Null
    Set-Content -LiteralPath $checks -Value "" -Encoding UTF8
}

# –î–æ–¥–∞—Ç–∏ –ª–∏—à–µ —è–∫—â–æ —â–µ –Ω–µ–º–∞—î
$exists = Select-String -LiteralPath $checks -Pattern [Regex]::Escape($line) -Quiet
if (-not $exists) {
    Add-Content -LiteralPath $checks -Value $line
}

Write-Host "üîê CHECKSUMS –æ–Ω–æ–≤–ª–µ–Ω–æ: $checks"
Write-Host "üéâ –ì–æ—Ç–æ–≤–æ."


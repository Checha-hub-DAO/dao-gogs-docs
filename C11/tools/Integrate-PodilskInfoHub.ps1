<# 
.SYNOPSIS
  Integrate G46.1 Podilsk.InfoHub package (README.md + CHANGELOG.md) into repo.

.DESCRIPTION
  - Unzips package to target dir (non-ASCII paths supported).
  - Optionally validates SHA-256 of the ZIP.
  - Performs git add/commit/push from RepoRoot.
  - Safe by default: supports -DryRun and -SkipPush.

.EXAMPLE
  pwsh -NoProfile -ExecutionPolicy Bypass -File `
    .\Integrate-PodilskInfoHub.ps1 `
    -ZipPath 'C:\Users\serge\Downloads\G46.1_Podilsk_InfoHub_Package.zip' `
    -RepoRoot 'D:\DAO_GOGS' `
    -TargetDir 'D:\DAO_GOGS\G-CATALOG\G\G46 –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∏–π —â–∏—Ç –ü–æ–¥—ñ–ª–ª—è\G46.1 Podilsk.InfoHub' `
    -CommitMessage 'G46.1 Podilsk.InfoHub ‚Äî integrate README + CHANGELOG package' `
    -Verbose
#>

[CmdletBinding()]
param(
  # –®–ª—è—Ö –¥–æ ZIP-–ø–∞–∫–µ—Ç–∞ –∑ README.md + CHANGELOG.md
  [Parameter(Mandatory=$true)]
  [ValidateScript({ Test-Path $_ -PathType Leaf })]
  [string]$ZipPath,

  # –ö–æ—Ä—ñ–Ω—å git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
  [Parameter(Mandatory=$true)]
  [ValidateScript({ Test-Path $_ -PathType Container })]
  [string]$RepoRoot,

  # –ö—ñ–Ω—Ü–µ–≤–∞ –ø–∞–ø–∫–∞ –º–æ–¥—É–ª—è (–∫—É–¥–∏ —Ä–æ–∑–ø–∞–∫–æ–≤—É–≤–∞—Ç–∏)
  [Parameter(Mandatory=$true)]
  [string]$TargetDir,

  # (–û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) –û—á—ñ–∫—É–≤–∞–Ω–∏–π SHA256 ZIP-–∞
  [Parameter(Mandatory=$false)]
  [string]$ExpectedSha256,

  # –¢–µ–∫—Å—Ç –∫–æ–º—ñ—Ç—É
  [Parameter(Mandatory=$false)]
  [string]$CommitMessage = "G46.1 Podilsk.InfoHub ‚Äî integrate README + CHANGELOG package",

  # –ù–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ push
  [switch]$SkipPush,

  # –°—É—Ö–∏–π –ø—Ä–æ–≥—ñ–Ω (–Ω—ñ—á–æ–≥–æ –Ω–µ –∑–º—ñ–Ω—é—î –Ω–∞ –¥–∏—Å–∫—É/–≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó)
  [switch]$DryRun
)

function Step($m){ Write-Host "üîß $m" -ForegroundColor Cyan }
function OK($m){ Write-Host "‚úÖ $m" -ForegroundColor Green }
function Warn($m){ Write-Host "‚ö†Ô∏è  $m" -ForegroundColor Yellow }
function Err($m){ Write-Host "‚ùå $m" -ForegroundColor Red }

$ErrorActionPreference = 'Stop'

# 1) –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ–≤–∫—ñ–ª–ª—è
Step "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–≤–∫—ñ–ª–ª—è‚Ä¶"
if (-not (Get-Command git -ErrorAction SilentlyContinue)) { throw "Git –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É PATH" }
$repo = (Resolve-Path $RepoRoot).Path
$zip  = (Resolve-Path $ZipPath).Path

# 2) –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ SHA256 (—è–∫—â–æ –≤–∫–∞–∑–∞–Ω–æ)
if ($ExpectedSha256) {
  Step "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ SHA256 ZIP‚Ä¶"
  $actual = (Get-FileHash -Algorithm SHA256 -Path $zip).Hash.ToUpper()
  if ($actual -ne $ExpectedSha256.ToUpper()) {
    throw "Hash mismatch: expected $ExpectedSha256, got $actual"
  }
  OK "SHA256 –≤–∞–ª—ñ–¥–Ω–∏–π."
} else {
  Warn "ExpectedSha256 –Ω–µ –∑–∞–¥–∞–Ω–æ ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø—Ä–æ–ø—É—â–µ–Ω–æ."
}

# 3) –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ü—ñ–ª—å–æ–≤–æ—ó –ø–∞–ø–∫–∏
Step "–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ TargetDir‚Ä¶"
if (-not (Test-Path $TargetDir)) {
  if ($DryRun) { Warn "DryRun: —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ç–∞–ª–æ–≥—É –ø—Ä–æ–ø—É—â–µ–Ω–æ ‚Üí $TargetDir" }
  else { New-Item -ItemType Directory -Force -Path $TargetDir | Out-Null }
}
$target = (Resolve-Path $TargetDir).Path
OK "TargetDir: $target"

# 4) –†–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è ZIP
Step "–†–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è ZIP —É TargetDir‚Ä¶"
if (-not $DryRun) {
  Add-Type -AssemblyName System.IO.Compression.FileSystem
  # Force overwrite = true
  [System.IO.Compression.ZipFile]::ExtractToDirectory($zip, $target, $true)
} else {
  Warn "DryRun: —Ä–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è –ø—Ä–æ–ø—É—â–µ–Ω–æ."
}
OK "–†–æ–∑–ø–∞–∫–æ–≤–∞–Ω–æ (–∞–±–æ DryRun)."

# 5) –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ñ–∞–π–ª—ñ–≤
$readme = Join-Path $target 'README.md'
$chlog  = Join-Path $target 'CHANGELOG.md'
if (-not (Test-Path $readme)) { throw "README.md –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø—ñ—Å–ª—è —Ä–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è!" }
if (-not (Test-Path $chlog))  { throw "CHANGELOG.md –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø—ñ—Å–ª—è —Ä–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è!" }
OK "README.md —Ç–∞ CHANGELOG.md ‚Äî –Ω–∞ –º—ñ—Å—Ü—ñ."

# 6) git add/commit/push
Step "git add‚Ä¶"
$relReadme = $readme.Replace($repo, '').TrimStart('\','/')
$relChlog  = $chlog.Replace($repo, '').TrimStart('\','/')

if (-not $DryRun) {
  git -C $repo add -- "$relReadme" "$relChlog"
} else {
  Warn "DryRun: git add –ø—Ä–æ–ø—É—â–µ–Ω–æ ($relReadme, $relChlog)"
}

Step "git commit‚Ä¶"
if (-not $DryRun) {
  # –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–º—ñ–Ω ‚Äî git –ø–æ–≤–µ—Ä–Ω–µ –Ω–µ–Ω—É–ª—å–æ–≤–∏–π –∫–æ–¥. –û–±—Ä–æ–±–∏–º–æ –º‚Äô—è–∫–æ.
  try {
    git -C $repo commit -m $CommitMessage | Out-Null
    OK "–ö–æ–º—ñ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ."
  } catch {
    Warn "–ô–º–æ–≤—ñ—Ä–Ω–æ –Ω–µ–º–∞—î –∑–º—ñ–Ω –¥–ª—è –∫–æ–º—ñ—Ç—É. –ü—Ä–æ–¥–æ–≤–∂—É—é."
  }
} else {
  Warn "DryRun: commit –ø—Ä–æ–ø—É—â–µ–Ω–æ."
}

if (-not $SkipPush) {
  Step "git push‚Ä¶"
  if (-not $DryRun) {
    git -C $repo push | Out-Null
    OK "Push –≤–∏–∫–æ–Ω–∞–Ω–æ."
  } else {
    Warn "DryRun: push –ø—Ä–æ–ø—É—â–µ–Ω–æ."
  }
} else {
  Warn "SkipPush: push –ø—Ä–æ–ø—É—â–µ–Ω–æ."
}

OK "–Ü–ù–¢–ï–ì–†–ê–¶–Ü–Æ –ó–ê–í–ï–†–®–ï–ù–û."
Write-Host "üëâ –ü–µ—Ä–µ–≤—ñ—Ä GitBook —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é —Å—Ç–æ—Ä—ñ–Ω–∫–∏ G46.1 –ø—ñ—Å–ª—è push." -ForegroundColor Magenta

<#
.SYNOPSIS
  –°—Ç–≤–æ—Ä—é—î –ø–æ—Ä–æ–∂–Ω—ñ–π —â–æ—Ç–∏–∂–Ω–µ–≤–∏–π —á–µ–∫–ª—ñ—Å—Ç (Markdown) —É REPORTS –∑ –¥–∞—Ç–æ—é —É –Ω–∞–∑–≤—ñ.

.DESCRIPTION
  - –û–±—á–∏—Å–ª—é—î –ø–µ—Ä—ñ–æ–¥ —Ç–∏–∂–Ω—è (–ü–Ω‚Äì–ù–¥) –∞–±–æ –ø—Ä–∏–π–º–∞—î -WeekStart/-WeekEnd.
  - –°—Ç–≤–æ—Ä—é—î —Ñ–∞–π–ª: REPORTS\CHECHA_CHECKLIST_YYYY-MM-DD_to_YYYY-MM-DD.md
  - –í—Å—Ç–∞–≤–ª—è—î —Ç–∞–±–ª–∏—á–Ω–∏–π —à–∞–±–ª–æ–Ω –∑ —á–µ–∫–±–æ–∫—Å–∞–º–∏.
  - (–û–ø—Ü—ñ–π–Ω–æ) –¥–æ–¥–∞—î –∑–∞–ø–∏—Å —É REPORTS\CHECKSUMS.txt

.PARAMETER WeekStart
  –î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É —Ç–∏–∂–Ω—è (–ª–æ–∫–∞–ª—å–Ω–∏–π —á–∞—Å). –Ø–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–æ ‚Äî –Ω–∞—Å—Ç—É–ø–Ω–∏–π –ø–æ–Ω–µ–¥—ñ–ª–æ–∫.

.PARAMETER WeekEnd
  –î–∞—Ç–∞ –∫—ñ–Ω—Ü—è —Ç–∏–∂–Ω—è. –Ø–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–æ ‚Äî –Ω–µ–¥—ñ–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ —Ç–∏–∂–Ω—è 23:59:59.

.PARAMETER RepoRoot
  –ö–æ—Ä—ñ–Ω—å CHECHA_CORE. –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: D:\CHECHA_CORE

.PARAMETER UpdateChecksums
  –Ø–∫—â–æ –≤–∫–∞–∑–∞–Ω–æ ‚Äî –æ–Ω–æ–≤–ª—é—î REPORTS\CHECKSUMS.txt –∑–∞–ø–∏—Å–æ–º –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É.

.EXAMPLE
  pwsh -NoProfile -ExecutionPolicy Bypass -File "D:\CHECHA_CORE\TOOLS\New-WeeklyChecklist.ps1"

.EXAMPLE
  pwsh -NoProfile -File "D:\CHECHA_CORE\TOOLS\New-WeeklyChecklist.ps1" -WeekStart '2025-10-13' -WeekEnd '2025-10-19' -UpdateChecksums
#>

[CmdletBinding()]
param(
  [datetime]$WeekStart,
  [datetime]$WeekEnd,
  [string]  $RepoRoot = 'D:\CHECHA_CORE',
  [switch]  $UpdateChecksums
)

# ‚îÄ‚îÄ –í–∏—Ä–∞—Ö—É–≤–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∏–π —Ç–∏–∂–¥–µ–Ω—å (–ü–Ω‚Äì–ù–¥), —è–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–æ –≤—Ä—É—á–Ω—É
if (-not $WeekStart -or -not $WeekEnd) {
  $now = Get-Date
  $dow = [int]$now.DayOfWeek  # 0=Sun ‚Ä¶ 6=Sat
  $offsetToMonday = switch ($dow) { 0 {-6} 1 {0} default {1 - $dow} }
  $mondayThisWeek = ($now.Date).AddDays($offsetToMonday)
  $WeekStart = $mondayThisWeek.AddDays(7)               # –Ω–∞—Å—Ç—É–ø–Ω–∏–π –ø–æ–Ω–µ–¥—ñ–ª–æ–∫
  $WeekEnd   = $WeekStart.AddDays(6).Date.AddHours(23).AddMinutes(59).AddSeconds(59)
}

$reportsDir = Join-Path $RepoRoot 'REPORTS'
$null = New-Item -ItemType Directory -Force -Path $reportsDir

$ws = $WeekStart.ToString('yyyy-MM-dd')
$we = $WeekEnd.ToString('yyyy-MM-dd')
$outName = "CHECHA_CHECKLIST_${ws}_to_${we}.md"
$outPath = Join-Path $reportsDir $outName

# ‚îÄ‚îÄ –®–∞–±–ª–æ–Ω —á–µ–∫–ª—ñ—Å—Ç–∞ (—Ç–∞–±–ª–∏—á–Ω–∏–π)
$template = @"
# ‚úÖ CHECHA CHECKLIST ‚Äî BTD 1.0 (–©–æ—Ç–∏–∂–Ω–µ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞)
**–ü–µ—Ä—ñ–æ–¥:** ${ws} ‚Üí ${we}  
**–í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏–π:** –°.–ß.  

---

## üîπ –¢–∞–±–ª–∏—Ü—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏

| ‚Ññ | –ö—Ä–æ–∫                     | –î—ñ—è / –©–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ | –°—Ç–∞—Ç—É—Å |
|---|--------------------------|---------------------|--------|
| 1 | MANIFEST.md              | SHA256 ‚â† `‚Äî`, —Å—Ç–∞—Ç—É—Å–∏ –∫–æ—Ä–µ–∫—Ç–Ω—ñ (OK/Draft/Error/Planned) | ‚òê |
| 2 | CHECKSUMS.txt (C11)      | –•–µ—à—ñ –∑–±—ñ–≥–∞—é—Ç—å—Å—è –∑ MANIFEST | ‚òê |
| 3 | BTD_Manifest.json        | JSON —Ü—ñ–ª—ñ—Å–Ω–∏–π, –Ω–µ–º–∞—î `null` | ‚òê |
| 4 | C03_LOG                  | –û—Å—Ç–∞–Ω–Ω—ñ–π –∫–æ–º—ñ—Ç –∑–∞—Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ, –Ω–µ–º–∞—î `(missing)` | ‚òê |
| 5 | REPORTS                  | –û—Å—Ç–∞–Ω–Ω—ñ–π Digest —ñ—Å–Ω—É—î, –ø—Ä–æ–±–ª–µ–º = 0 | ‚òê |
| 6 | Git –ª–æ–∫–∞–ª—å–Ω–æ             | `git status` —á–∏—Å—Ç–∏–π, `git log -1` –∞–∫—Ç—É–∞–ª—å–Ω–∏–π | ‚òê |
| 7 | GitHub Actions           | `BTD Weekly Digest` = ‚úÖ Success, –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–π | ‚òê |

---

## üîπ –Ø–∫—â–æ —î –ø—Ä–æ–±–ª–µ–º–∏
- Missing file ‚Üí —Å—Ç–≤–æ—Ä–∏—Ç–∏/–≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ ‚Üí –∑–∞–ø—É—Å—Ç–∏—Ç–∏ `Build-BTD-Manifest.ps1`  
- SHA mismatch ‚Üí –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ñ–∞–π–ª, –æ–Ω–æ–≤–∏—Ç–∏ MANIFEST  
- Bad status ‚Üí –≤—ñ–¥–∫–æ—Ä–∏–≥—É–≤–∞—Ç–∏ –≤—Ä—É—á–Ω—É  
- Digest errors ‚Üí –ø—Ä–æ–≥–Ω–∞—Ç–∏ `Build-WeeklyBTD-Digest.ps1` –ø–æ–≤—Ç–æ—Ä–Ω–æ

‚Äî _–°.–ß._
"@

# ‚îÄ‚îÄ –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ–∞–π–ª (–Ω–µ –ø–µ—Ä–µ—Ç–∏—Ä–∞—î–º–æ, —è–∫—â–æ –≤–∂–µ —ñ—Å–Ω—É—î)
if (Test-Path -LiteralPath $outPath) {
  Write-Host "[INFO] –í–∂–µ —ñ—Å–Ω—É—î: $outPath"
} else {
  $template | Set-Content -LiteralPath $outPath -Encoding UTF8
  Write-Host "[OK] –°—Ç–≤–æ—Ä–µ–Ω–æ: $outPath"
}

# ‚îÄ‚îÄ –û–ø—Ü—ñ–π–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è REPORTS\CHECKSUMS.txt
if ($UpdateChecksums) {
  $checks = Join-Path $reportsDir 'CHECKSUMS.txt'
  $sha = (Get-FileHash -Algorithm SHA256 -LiteralPath $outPath).Hash
  $rel = "REPORTS/$outName"
  $line = "{0}  {1}" -f $sha, $rel

  if (Test-Path -LiteralPath $checks) {
    # –ø—Ä–∏–±–µ—Ä–µ–º–æ —Å—Ç–∞—Ä—ñ —Ä—è–¥–∫–∏ –¥–ª—è —Ü—å–æ–≥–æ —Ñ–∞–π–ª—É (—è–∫—â–æ –≤—ñ–¥—Ç–≤–æ—Ä—é—î—à)
    $cur = Get-Content -LiteralPath $checks
    $cur = $cur | Where-Object { $_ -notmatch [regex]::Escape($outName) }
    $cur + $line | Set-Content -LiteralPath $checks -Encoding UTF8
  } else {
    $line | Set-Content -LiteralPath $checks -Encoding UTF8
  }
  Write-Host "[OK] CHECKSUMS –æ–Ω–æ–≤–ª–µ–Ω–æ: $checks"
}

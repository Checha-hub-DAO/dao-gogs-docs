param(
  [Parameter(Mandatory)][string]$ZipPath,  # —à–ª—è—Ö –¥–æ —Ä–µ–ª—ñ–∑–Ω–æ–≥–æ ZIP
  [Parameter(Mandatory)][string]$ArchiveDir,  # —Ç–µ–∫–∞ –∞—Ä—Ö—ñ–≤—É —Ä–æ–∫—É
  [string]$ArchiveLogPath,  # —à–ª—è—Ö –¥–æ ARCHIVE_LOG_YYYY.md (–Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ)
  [string]$Version = "v1.0",
  [string]$ReleaseDate = (Get-Date -Format 'yyyy-MM-dd'),
  [string]$Status = "‚úÖ Stable",
  [string]$Notes = ""
)

if(-not (Test-Path -LiteralPath $ZipPath)){ throw "ZIP not found: $ZipPath" }
if(-not (Test-Path -LiteralPath $ArchiveDir)){ New-Item -ItemType Directory -Force -Path $ArchiveDir | Out-Null }

$zipName = Split-Path $ZipPath -Leaf
$dst = Join-Path $ArchiveDir $zipName

Copy-Item -LiteralPath $ZipPath -Destination $dst -Force

$sha = (Get-FileHash -Algorithm SHA256 -LiteralPath $dst).Hash.ToLower()
Write-Host "Copied -> $dst" -ForegroundColor Green
Write-Host "SHA256 -> $sha" -ForegroundColor Green

# –Ø–∫—â–æ –∑–∞–¥–∞–Ω–æ —à–ª—è—Ö –¥–æ –∂—É—Ä–Ω–∞–ª—É ‚Äî –¥–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫
if($ArchiveLogPath){
  if(-not (Test-Path -LiteralPath $ArchiveLogPath)){
    # —Å—Ç–≤–æ—Ä–∏–º–æ –∫–∞—Ä–∫–∞—Å —Ñ–∞–π–ª—É, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
    @(
      "# üóÇÔ∏è –ê—Ä—Ö—ñ–≤ –∑–≤—ñ—Ç—ñ–≤ CheCha System ‚Äî $($ReleaseDate.Substring(0,4))",
      "**–ö—É—Ä–∞—Ç–æ—Ä:** –°.–ß.",
      "",
      "## üì¶ –ü–æ—Ç–æ—á–Ω–∏–π —Ü–∏–∫–ª —Ä–µ–ª—ñ–∑—ñ–≤",
      "| ‚Ññ | –î–∞—Ç–∞ | –ù–∞–∑–≤–∞ –ø–∞–∫–µ—Ç–∞ | –í–µ—Ä—Å—ñ—è | –•–µ—à SHA-256 | –°—Ç–∞—Ç—É—Å | –ü—Ä–∏–º—ñ—Ç–∫–∏ |",
      "|---|------|---------------|---------|--------------|---------|-----------|"
    ) | Set-Content -Encoding UTF8 -LiteralPath $ArchiveLogPath
  }
  # –∞–≤—Ç–æ-–Ω–æ–º–µ—Ä: –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ —ñ—Å–Ω—É—é—á—ñ —Ä—è–¥–∫–∏-–µ–ª–µ–º–µ–Ω—Ç–∏
  $rows = (Get-Content -LiteralPath $ArchiveLogPath) | Where-Object { $_ -match '^\|\s*\d+\s*\|' }
  $n = ($rows.Count + 1)
  $row = "| $n | $ReleaseDate | $zipName | $Version | $sha | $Status | $Notes |"
  Add-Content -Encoding UTF8 -LiteralPath $ArchiveLogPath -Value $row
  Write-Host "ARCHIVE_LOG updated: $ArchiveLogPath" -ForegroundColor Cyan
}

# –∫–æ–¥ –≤–∏—Ö–æ–¥—É 0 —è–∫—â–æ –≤—Å–µ –û–ö
exit 0
